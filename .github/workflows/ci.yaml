name: CI Pipeline

on:
  push:
    branches:
      - main
      - staging
      - documentation
  pull_request:
    branches:
      - main
      - staging
      - documentation

jobs:
  
  # ----------------------
  # 1. Setup Job (Uses venv)
  # ----------------------
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python Virtual Environment
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --no-cache-dir -e .
          pip install flake8 pytest-flake8 pytest-cov coverage
          python -c "import gedidb; print(gedidb.__version__)"

      - name: Upload Virtual Environment
        uses: actions/upload-artifact@v4
        with:
          name: python-env
          path: .venv

  # ----------------------
  # 2. Unit Test Job (Uses venv)
  # ----------------------
  test:
    runs-on: ubuntu-latest
    needs: setup  # Run only after setup completes
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Virtual Environment
        uses: actions/download-artifact@v4
        with:
          name: python-env
          path: .venv

      - name: Install Coverage Dependencies
        run: |
          . .venv/bin/activate
          pip install pytest-cov

      - name: Run Tests
        run: |
          . .venv/bin/activate
          pytest --cov=gedidb --cov-branch --cov-report=xml --cov-report=term

      - name: Upload Coverage Report (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Upload Results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true

  # ----------------------
  # 3. Linting Job (Uses venv)
  # ----------------------
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Virtual Environment
        uses: actions/download-artifact@v4
        with:
          name: python-env
          path: .venv

      - name: Run Flake8 Linting
        run: |
          . .venv/bin/activate
          flake8
