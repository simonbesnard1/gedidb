.. for doctest:
    >>> import gedidb as gdb

.. _fundamentals-provider:

#############
Data Provider
#############

The :py:class:`gedidb.GEDIProvider` module in gediDB is the core interface for accessing structured GEDI data and metadata from a PostGIS-enabled PostgreSQL database. With this module, you can execute spatial and non-spatial queries on GEDI data, retrieving relevant variables efficiently and enabling complex geospatial operations. The :py:class:`gedidb.GEDIProvider` class streamlines the process, making it easy to access the extensive data generated by the GEDI mission for advanced analysis.

Key capabilities
----------------

- **Spatial Queries**: Query GEDI data based on specific spatial boundaries, enabling analyses within defined regions.
- **Temporal Queries**: Filter data by date range to focus on specific time periods.
- **Variable Selection**: Retrieve only the data variables needed for your analysis to optimize performance.
- **Flexible Output Formats**: Export results as either `xarray.Dataset` for multi-dimensional data or `pandas.DataFrame` for tabular data.

Default available variables
---------------------------

The database includes a wide range of variables, covering spatial coordinates, elevation data, vegetation metrics, biomass estimates, and quality flags across multiple GEDI products (L2A, L2B, L4A, L4C). Below is a table of available default variables stored in the database:

.. csv-table::
   :header: "Variable Name", "Description", "Units", "Product"
   :widths: 20, 50, 15, 10

   "agbd", "Aboveground biomass density (Mg/ha)", "Mg/ha", "L4A"
   "agbd_pi_lower", "Lower prediction interval (see alpha attribute for the level)", "Mg/ha", "L4A"
   "agbd_pi_upper", "Upper prediction interval (see alpha attribute for the level)", "Mg/ha", "L4A"
   "agbd_se", "Aboveground biomass density (Mg/ha) prediction standard error", "Mg/ha", "L4A"
   "agbd_t", "Model prediction in fit units", "-", "L4A"
   "agbd_t_se", "Model prediction standard error in fit units (needed for calculation of custom prediction intervals)", "-", "L4A"
   "algorithm_run_flag", "The L4A algorithm is run if this flag is set to 1. This flag selects data that have sufficient waveform fidelity for AGBD estimation.", "-", "L4A"
   "algorithmrun_flag", "The L2B algorithm is run if this flag is set to 1 indicating data have sufficient waveform fidelity for L2B to run", "N/A", "L2B"
   "cover", "Total canopy cover", "Percent", "L2B"
   "cover_z", "Cumulative canopy cover vertical profile", "Percent", "L2B"
   "degrade_flag", "Flag indicating degraded state of pointing and/or positioning information", "N/A", "L2A"
   "delta_time", "Time delta since Jan 1 00:00 2018", "Seconds", "L2A"
   "digital_elevation_model", "TanDEM-X elevation at GEDI footprint location", "Meters", "L2A"
   "digital_elevation_model_srtm", "STRM elevation at GEDI footprint location", "Meters", "L2A"
   "dz", "Vertical step size of foliage profile", "Meters", "L2B"
   "elev_highestreturn", "Elevation of highest detected return relative to reference ellipsoid", "Meters", "L2A"
   "elev_lowestmode", "Elevation of center of lowest mode relative to reference ellipsoid", "Meters", "L2A"
   "elevation_bin0", "Elevation of first bin of the pgap_theta_z, interpolated from L1B waveform coordinate", "Meters", "L2B"
   "elevation_bin0_error", "Error in elevation of bin 0", "Meters", "L2A"
   "energy_total", "Integrated counts in the return waveform relative to the mean noise level", "Number", "L2A"
   "fhd_normal", "Foliage Height Diversity", "N/A", "L2B"
   "l2_quality_flag", "Flag identifying the most useful L2 data for biomass predictions", "-", "L4A"
   "l2a_quality_flag", "L2A quality flag", "Quality Flag", "L2B"
   "l2b_quality_flag", "L2B quality flag", "Quality Flag", "L2B"
   "l4_quality_flag", "Flag simplifying selection of most useful biomass predictions", "-", "L4A"
   "landsat_water_persistence", "Percent UMD GLAD Landsat observations with classified surface water", "N/A", "L2A"
   "lat_highestreturn", "Latitude of highest detected return", "Degree", "L2A"
   "lat_lowestmode", "Latitude of center of lowest mode", "Degree", "L2A"
   "latitude_bin0", "Latitude of first bin of the pgap_theta_z, interpolated from L1B waveform coordinate", "Degree", "L2B"
   "latitude_bin0_error", "Error in latitude of bin 0", "Degree", "L2A"
   "leaf_off_flag", "GEDI 1 km EASE 2.0 grid flag", "N/A", "L2A"
   "leaf_on_cycle", "Flag that indicates the vegetation growing cycle for leaf-on observations", "N/A", "L2A"
   "leaf_on_doy", "GEDI 1 km EASE 2.0 grid leaf-on start day-of-year", "N/A", "L2A"
   "lon_highestreturn", "Longitude of highest detected return", "Degree", "L2A"
   "lon_lowestmode", "Longitude of center of lowest mode", "Degree", "L2A"
   "longitude_bin0", "Longitude of first bin of the pgap_theta_z, interpolated from L1B waveform coordinate", "Degree", "L2B"
   "longitude_bin0_error", "Error on longitude_bin0", "Degree", "L2A"
   "master_frac", "Master time, fractional part", "Seconds", "L2A"
   "master_int", "Master time, integer part", "Seconds", "L2A"
   "modis_nonvegetated", "Percent non-vegetated from MODIS MOD44B V6 data", "Percent", "L2A"
   "modis_treecover", "Percent tree cover from MODIS MOD44B V6 data", "Percent", "L2A"
   "num_detectedmodes", "Number of detected modes in rxwaveform", "N/A", "L2A"
   "omega", "Foliage Clumping Index", "N/A", "L2B"
   "pai", "Total Plant Area Index", "m²/m²", "L2B"
   "pai_z", "Plant Area Index profile", "m²/m²", "L2B"
   "pavd_z", "Plant Area Volume Density profile", "m²/m³", "L2B"
   "pft_class", "GEDI 1 km EASE 2.0 grid Plant Functional Type (PFT)", "N/A", "L2A"
   "pgap_theta", "Total Gap Probability (theta)", "N/A", "L2B"
   "pgap_theta_error", "Total Pgap (theta) error", "N/A", "L2B"
   "predict_stratum", "Character ID of the prediction stratum name for the 1 km cell", "-", "L4A"
   "predictor_limit_flag", "Prediction stratum identifier. Predictor value is outside the bounds of the training data (0=in bounds; 1=lower bound; 2=upper bound)", "-", "L4A"
   "quality_flag", "Flag simplifying selection of most useful data", "Quality Flag", "L2A"
   "region_class", "GEDI 1 km EASE 2.0 grid world continental regions", "N/A", "L2A"
   "response_limit_flag", "Prediction value is outside the bounds of the training data (0=in bounds; 1=lower bound; 2=upper bound)", "-", "L4A"
   "rg", "Integral of the ground component in the RX waveform for the selected L2A processing version", "Number", "L2B"
   "rh", "Relative height metrics at 1% interval", "Meters", "L2A"
   "rh100", "Height above ground of the received waveform signal start (rh[101] from L2A)", "cm", "L2B"
   "rhog", "Volumetric scattering coefficient (rho) of the ground", "Number", "L2B"
   "rhog_error", "Rho (ground) error", "Number", "L2B"
   "rhov", "Volumetric scattering coefficient (rho) of the canopy", "Number", "L2B"
   "rhov_error", "Rho (canopy) error", "Number", "L2B"
   "rossg", "Ross-G function", "N/A", "L2B"
   "rv", "Integral of the vegetation component in the RX waveform for the selected L2A processing version", "Number", "L2B"
   "rx_range_highestreturn", "Range to signal start", "Meters", "L2B"
   "selected_algorithm", "Identifier of algorithm selected as identifying the lowest non-noise mode", "N/A", "L2A"
   "selected_l2a_algorithm", "Selected L2A algorithm setting", "N/A", "L2B"
   "selected_mode", "Identifier of mode selected as lowest non-noise mode", "N/A", "L2A"
   "selected_rg_algorithm", "Selected R (ground) algorithm", "N/A", "L2B"
   "sensitivity", "Maximum canopy cover that can be penetrated", "N/A", "L2A"
   "shot_number", "Shot number", "N/A", "L2A"
   "solar_azimuth", "Solar azimuth", "N/A", "L2A"
   "solar_elevation", "Solar elevation", "N/A", "L2A"
   "stale_return_flag", "Flag indicating return signal above detection threshold was not detected", "Class Flag", "L2A"
   "surface_flag", "Indicates elev_lowestmode is within 300 m of DEM or MSS", "N/A", "L2A"
   "urban_proportion", "The percentage proportion of land area within a focal area surrounding each shot that is urban land cover.", "Select Units", "L2A"
   "wsci", "Waveform Structural Complexity Index", "FLOAT32MT", "L4C"
   "wsci_pi_lower", "Waveform Structural Complexity Index lower prediction interval", "FLOAT32MT", "L4C"
   "wsci_pi_upper", "Waveform Structural Complexity Index upper prediction interval", "FLOAT32MT", "L4C"
   "wsci_quality_flag", "WSCI quality flag", "UINT8MT", "L4C"
   "wsci_xy", "Horizontal Structural Complexity", "FLOAT32MT", "L4C"
   "wsci_xy_pi_lower", "Horizontal Structural Complexity lower prediction interval", "FLOAT32MT", "L4C"
   "wsci_xy_pi_upper", "Horizontal Structural Complexity upper prediction interval", "FLOAT32MT", "L4C"

Retrieving GEDI Data with the GEDI Provider
-------------------------------------------

The :py:class:`gedidb.GEDIProvider` class is your main tool for querying GEDI data from the PostgreSQL database. Below is an example that demonstrates how to configure and use the provider to retrieve data:

.. code-block:: python

    import geopandas as gpd
    import gedidb as gdb

    #%% Load region of interest
    region_of_interest = gpd.read_file('./data/geojson/BR-Sa1.geojson')

    #%% Instantiate the GEDIProvider
    provider = gdb.GEDIProvider(config_file='./config_files/data_config.yml',
                                table_name="filtered_l2ab_l4ac_shots",
                                metadata_table="variable_metadata")

    #%% Define the columns to query and additional parameters
    vars_selected = ['rh', 'pavd_z', 'pai']
    dataset = provider.get_data(variables=vars_selected, geometry=region_of_interest, 
                                   start_time="2018-01-01", end_time="2024-12-31", 
                                   limit=None, force=True, order_by=["-shot_number"], 
                                   return_type='xarray')

Parameters for ``get_dataset()``:

 - **variables**: List of variables (columns) to retrieve from the database.
 - **geometry**: (Optional) GeoPandas geometry for spatial filtering.
 - **start_time**: Start date for temporal filtering (format: "YYYY-MM-DD").
 - **end_time**: End date for temporal filtering.
 - **limit**: (Optional) Maximum number of rows to return.
 - **force**: (Optional) Forces the query to run, even without specific filters.
 - **order_by**: (Optional) Order the results by specific columns, e.g., shot number.
 - **return_type**: Specifies the format of the returned data, either :py:class:`xarray.Dataset` or :py:class:`pandas.DataFrame`.

The returned data is formatted according to the `return_type` parameter, making it ready for further analysis.

Supported output formats
------------------------

The :py:class:`gedidb.GEDIProvider` supports the following output formats, allowing you to choose the structure that best suits your analysis:

- :py:class:`xarray.Dataset`: Ideal for multi-dimensional data that includes labeled dimensions, suitable for advanced numerical and geospatial analysis.
- :py:class:`pandas.DataFrame`: Perfect for tabular data and smaller datasets, allowing for quick manipulation and export to CSV or other formats.

Below is an example of how the dataset looks in the :py:class:`xarray.Dataset` format:

.. code-block:: python

    <xarray.Dataset> Size: 799MB
    Dimensions:        (shot_number: 479889, profile_points: 101)
    Coordinates:
      * shot_number    (shot_number) int64 4MB 236571100100105608 ... 20640000400...
        beam_name      (shot_number) object 4MB '/BEAM1011' ... '/BEAM0000'
        absolute_time  (shot_number) datetime64[ns] 4MB 2023-02-15T07:36:38.27130...
        latitude       (shot_number) float64 4MB -1.239 -1.248 ... -0.7691 -0.4406
        longitude      (shot_number) float64 4MB -48.0 -48.0 -48.0 ... -60.92 -61.15
    Dimensions without coordinates: profile_points
    Data variables:
        rh             (shot_number, profile_points) float64 388MB -7.52 ... 6.29
        pavd_z         (shot_number, profile_points) float64 388MB 0.1828 ... nan
        pai            (shot_number) float64 4MB 1.363 0.006368 ... 2.066 0.05252

The dataset includes multiple dimensions and variables:

- **Dimensions**: `shot_number` (unique ID for each shot) and `profile_points` (vertical profile points).
- **Coordinates**: Metadata such as `beam_name`, `absolute_time`, `latitude`, and `longitude`, describing each shot's spatial and temporal context.
- **Data Variables**: Core variables like `rh` (relative height), `pavd_z` (plant area volume density), and `pai` (plant area index) for ecological analysis.

--- 