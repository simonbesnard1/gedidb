[project]
name = "gedidb"
version = "2.0.0"
description = "A toolbox to download, process, store and visualise Global Ecosystem Dynamics Investigation (GEDI) L2A-B and L4A-C data"
readme = "README.md"
authors = [
    { name = "Simon Besnard", email = "besnard@gfz-potsdam.de" },
    { name = "Felix Dombrowski", email = "felix.dombrowski@uni-potsdam.de" },
    { name = "Amelia Holcomb", email = "amelia.holcomb@gmail.com" }
]
license = { file = "EUPL-1.2" }
keywords = ["geospatial", "GEDI", "database"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: EUROPEAN UNION PUBLIC LICENCE v.1.2 (EUPL-1.2)",
    "Operating System :: OS Independent"
]
requires-python = ">=3.12"
dependencies = [
    "pandas==2.2.2",
    "geopandas==1.0.1",
    "pyarrow==17.0.0",
    "h5py==3.11.0",
    "numpy==2.0.1",
    "dask-jobqueue==0.9.0",
    "xarray==2024.7.0",
    "Cartopy==0.23.0",
    "retry==0.9.2",
    "dask==2024.8.2",
    "distributed==2024.8.2",
    "bokeh==3.6.0",
    "boto3==1.35.49",
    "tiledb==0.33.2",
    "scipy==1.14.1",
    "pytest",
    "mypy",
    "numpydoc"
]

[project.optional-dependencies]
accel = ["scipy", "bottleneck", "numbagg", "flox", "opt_einsum"]
dev = [
    "hypothesis",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-env",
    "pytest-xdist",
    "pytest-timeout",
    "ruff",
    "xarray[complete]"
]
io = ["netCDF4", "h5netcdf", "scipy", 'pydap; python_version<"3.10"', "zarr<3", "fsspec", "cftime", "pooch"]
viz = ["matplotlib", "seaborn", "nc-time-axis"]

[project.urls]
"Source Code" = "https://git.gfz-potsdam.de/global-land-monitoring/gedi-toolbox"

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=42",
    "setuptools-scm>=7"
]

[tool.setuptools]
packages = ["gedidb"]

[tool.setuptools_scm]
fallback_version = "9999"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING"]

[tool.mypy]
enable_error_code = ["ignore-without-code", "redundant-self", "redundant-expr"]
exclude = ["build"]
files = "gedidb"
show_error_context = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
check_untyped_defs = true
packages = [
    "gedidb.core.gedidatabase",
    "gedidb.core.gedigranule",
    "gedidb.core.gediprocessor",
    "gedidb.core.gediprovider",
    "gedidb.downloader",
    "gedidb.granule",
    "gedidb.providers",
    "gedidb.tests",
    "gedidb.utils"
]

[[tool.mypy.overrides]]
check_untyped_defs = false
module = [
    "gedidb.tests.test_columns",
    "gedidb.tests.test_gedi_granules",
    "gedidb.tests.test_geospatial_tools",
    "gedidb.tests.test_granule_name",
    "gedidb.tests.test_nasa_cmr_api",
    "gedidb.tests.test_results",
    "gedidb.tests.test_write_db"
]

[[tool.mypy.overrides]]
warnings = [
    "warn_unused_ignores = true",
    "strict_concatenate = true",
    "strict_equality = true",
    "check_untyped_defs = true",
    "disallow_any_generics = true",
    "disallow_subclassing_any = true",
    "disallow_untyped_decorators = true",
    "disallow_incomplete_defs = true",
    "disallow_untyped_calls = true",
    "disallow_untyped_defs = true",
    "no_implicit_reexport = true",
    "warn_return_any = true"
]

[tool.ruff]
extend-exclude = [
    "doc",
    "_typed_ops.pyi"
]

[tool.ruff.lint]
extend-safe-fixes = ["TID252"]
extend-ignore = ["E402", "E501", "E731", "UP007"]
extend-select = ["F", "E", "W", "TID", "I", "UP"]

[tool.ruff.lint.per-file-ignores]
"asv_bench/**" = ["TID252"]

[tool.ruff.lint.isort]
known-first-party = ["gedidb"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]

[tool.aliases]
test = "pytest"

[tool.repo-review]
ignore = ["PP308"]

