stages:
  - setup
  - build
  - test
  - deploy

# ----------------------
# 1. Conda Setup Job
# ----------------------

# ----------------------
# 2. Setup Job (Uses venv)
# ----------------------
setup-job:
  stage: setup
  script:
    - git fetch --tags  # Ensure tags are available
    - git describe --tags  # Debugging step
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install --no-cache-dir -e .
    - pip install flake8 pytest-flake8 pytest-cov coverage
    - python -c "import gedidb; print(gedidb.__version__)"
  artifacts:
    paths:
      - .venv/
    expire_in: 1 day

# ----------------------
# 3. Unit Test Job (Uses venv)
# ----------------------
unit-test-job:
  stage: test
  dependencies:
    - setup-job
  script:
    - source .venv/bin/activate
    - pytest --cov=gedidb --cov-report html:htmlcov --cov-report=term --cov-report=xml:coverage.xml --junitxml=reports/junit.xml gedidb/tests
  coverage: '/TOTAL.*?(\d+\.\d+%)$/'
  artifacts:
    when: always
    reports:
      junit: reports/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - htmlcov/
      - reports/
      - coverage.xml

# ----------------------
# 4. Lint Test Job (Uses venv)
# ----------------------
lint-test-job:
  stage: test
  script:
    - source .venv/bin/activate
    - flake8

# ----------------------
# 5. Documentation Build Job (Uses Conda)
# ----------------------
build-job:
  stage: build
  dependencies:
    - conda-setup-job  # Ensures Conda environment is set up before running
  script:
    - echo "Restoring Miniconda from artifacts..."
    - ls -al /opt/miniconda || echo "Miniconda not found!"
    - source /opt/miniconda/etc/profile.d/conda.sh
    - conda activate gedidb-docs
    - python -c "import gedidb; print(gedidb.__version__)"
    - sphinx-build -W -b html doc/ doc/_build/html
  artifacts:
    paths:
      - doc/_build/html
    expire_in: 1 day

# ----------------------
# 6. Deployment Job (Only Runs on Tags)
# ----------------------
pages: 
  stage: deploy
  dependencies:
    - build-job
    - unit-test-job
  script:
    - rm -rf public
    - mkdir -p public
    - cp -r doc/_build/html/* public/
    - ls -al public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - tags
