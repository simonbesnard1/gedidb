stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:
  stage: build
  script:
    # Install conda (if not already installed on the runner)
    - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - source "$HOME/miniconda/etc/profile.d/conda.sh"
    - conda config --set always_yes yes
    - conda env create -f ci/requirements/doc.yml  # Use your doc.yml to create the environment
    - conda activate gedidb-docs  # Activate the environment
    - pip install sphinx_gallery
    # Build the documentation
    - sphinx-build -b html doc/ doc/_build/html
  artifacts:
    paths:
      - doc/_build/html  # Store the build results as artifacts
    expire_in: 1 day     # Optional: Define how long to keep artifacts

setup-job:
  stage: build
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install -e .
    - pip install flake8 pytest-flake8 pytest-cov coverage
  artifacts:
    paths:
      - .venv/
    expire_in: 1 day

unit-test-job:
  stage: test
  dependencies:
    - setup-job
  script:
    - source .venv/bin/activate
    - echo "Running tests with coverage..."
    - pytest --cov=gedidb --cov-report html:htmlcov --cov-report=term --cov-report=xml:coverage.xml --junitxml=reports/junit.xml gedidb/tests
  coverage: '/TOTAL.*?(\d+\.\d+%)$/'
  artifacts:
    when: always
    reports:
      junit: reports/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - htmlcov/
      - reports/
      - coverage.xml

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - source .venv/bin/activate
    - echo "Linting code..."
    - flake8

pages: 
  stage: deploy
  dependencies:
    - build-job
    - unit-test-job
  script:
    # Create the public directory
    - rm -rf public
    - mkdir -p public/doc/_static
    - mkdir -p public/coverage

    # Copy over the docs
    - cp -r doc/_build/html/* public/doc/

    # Copy over the coverage reports
    - cp -r htmlcov/* public/coverage/

    # Check if everything is working
    - ls -al public
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - documentation
    - main
    - staging
